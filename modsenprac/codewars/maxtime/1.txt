function latestTime(a, b, c, d) {
    const digits = [a, b, c, d];
    let maxTime = '';

    // Функция для генерации всех перестановок массива
    const permutations = (arr) => {
        if (arr.length === 1) return [arr];
        const result = [];
        for (let i = 0; i < arr.length; i++) {
            const rest = arr.slice(0, i).concat(arr.slice(i + 1));
            for (const perm of permutations(rest)) {
                result.push([arr[i], ...perm]);
            }
        }
        return result;
    };

    // Генерируем все перестановки
    const permutedDigits = permutations(digits);

    // Проверяем каждую перестановку
    for (const perm of permutedDigits) {
        const hh = `${perm[0]}${perm[1]}`; // Часы
        const mm = `${perm[2]}${perm[3]}`; // Минуты

        // Проверяем, является ли время допустимым
        if (parseInt(hh) < 24 && parseInt(mm) < 60) {
            const timeStr = `${hh}:${mm}`; // Форматируем время

            // Сравниваем с максимальным временем
            if (timeStr > maxTime) {
                maxTime = timeStr; // Обновляем максимальное время
            }
        }
    }

    return maxTime || '00:00'; // Если время не найдено, возвращаем 00:00
}

// Примеры использования
console.log(latestTime(1, 9, 8, 3)); // "19:38"
console.log(latestTime(9, 1, 2, 5)); // "21:59"
